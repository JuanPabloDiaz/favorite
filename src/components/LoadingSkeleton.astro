---
interface Props {
  className?: string;
  width?: string;
  height?: string;
}

const { className = '', width = 'full', height = '4', } = Astro.props;
---

<div class={`bg-gray-700 rounded animate-pulse h-${height} w-${width} ${className}`}></div>

<script>
  function toggleLoadingState() {
    const skeletons = document.querySelectorAll('[data-skeleton]');
    const content = document.querySelectorAll('[data-content]');

    // Ocultar skeletons y mostrar contenido después de un pequeño delay
    setTimeout(() => {
      skeletons.forEach(skeleton => {
        skeleton.classList.add('hidden');
      });

      content.forEach(element => {
        element.classList.remove('hidden');
      });
    }, 300);
  }

  // Cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', () => {
    // Asegurarse de que los skeletons estén visibles y el contenido oculto inicialmente
    const skeletons = document.querySelectorAll('[data-skeleton]');
    const content = document.querySelectorAll('[data-content]');

    skeletons.forEach(skeleton => {
      skeleton.classList.remove('hidden');
    });

    content.forEach(element => {
      element.classList.add('hidden');
    });
  });

  // Cuando la página esté completamente cargada
  window.addEventListener('load', toggleLoadingState);
</script>
