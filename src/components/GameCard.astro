---
const { game } = Astro.props;

const placeholderImageUrl = 'https://via.placeholder.com/500x750.png?text=No+Cover+Art';

const imageUrl =
  game.background_image && game.background_image !== placeholderImageUrl
    ? game.background_image
    : placeholderImageUrl;

const gameTitle = game.name || 'Title Unknown';
const gameUrl = `/games/${game.slug}`;

// Display developer, fallback to publisher
let primaryCredit = 'N/A';
if (game.developers && game.developers.length > 0) {
  primaryCredit = game.developers[0];
} else if (game.publishers && game.publishers.length > 0) {
  primaryCredit = game.publishers[0];
}

const displayGenres = game.genres && game.genres.length > 0 ? game.genres.join(', ') : 'N/A';
const displayReleaseDate = game.released ? game.released.split('-')[0] : 'Unknown Year'; // Display only year for brevity
---

<div class="mt-8">
  <a
    href={gameUrl}
    class="block aspect-[2/3] overflow-hidden rounded-lg bg-gray-800"
    title={gameTitle}
  >
    <div class="relative h-full w-full">
      <img
        src={imageUrl}
        alt={`Cover art for ${gameTitle}`}
        width="500"
        height="750"
        loading="lazy"
        decoding="async"
        class="thumbnail h-full w-full rounded-lg object-cover shadow-sm shadow-slate-600 transition duration-300 ease-in-out hover:opacity-75 hover:shadow-slate-50"
        id={`game-poster-${game.id}`}
      />
      <!-- Skeleton loader, hidden by default, managed by imageLoading.js -->
      <div class="absolute inset-0 animate-pulse bg-gray-800" style="display: none;"></div>
    </div>
  </a>
  <div class="mt-2">
    <a href={gameUrl} class="mt-2 text-lg hover:text-gray-300" title={gameTitle}>{gameTitle}</a>

    <div class="mt-1 text-sm text-gray-400">
      <span>{primaryCredit}</span>
    </div>

    {
      game.metacritic && (
        <div class="mt-1 flex items-center text-sm text-gray-400">
          <svg class="h-4 w-4 fill-current text-orange-500" viewBox="0 0 24 24">
            <path d="M17.56 21a1 1 0 01-.46-.11L12 18.22l-5.1 2.67a1 1 0 01-1.45-1.06l1-5.63-4.12-4a1 1 0 01-.25-1 1 1 0 01.81-.68l5.7-.83 2.51-5.13a1 1 0 011.8 0l2.54 5.12 5.7.83a1 1 0 01.81.68 1 1 0 01-.25 1l-4.12 4 1 5.63a1 1 0 01-.4 1 1 1 0 01-.62.18z" />
          </svg>
          <span class="ml-1">{game.metacritic}</span>
          <span class="mx-2">|</span>
          <span>{displayReleaseDate}</span>
        </div>
      )
    }
    {
      !game.metacritic && (
        <div class="mt-1 text-sm text-gray-400">
          <span>{displayReleaseDate}</span>
        </div>
      )
    }

    {
      game.genres && game.genres.length > 0 && (
        <div class="mt-1 truncate text-sm text-gray-400" title={displayGenres}>
          {displayGenres}
        </div>
      )
    }

    {
      game.platforms && game.platforms.length > 0 && (
        <div class="mt-2 flex flex-wrap gap-1">
          {game.platforms.slice(0, 5).map(
            (
              platform // Limit to 5 platforms to avoid overflow
            ) => (
              <span class="rounded-full bg-gray-700 px-2 py-0.5 text-xs text-gray-300">
                {platform}
              </span>
            )
          )}
        </div>
      )
    }
  </div>
</div>

<script>
  // Assuming imageLoading.js is correctly set up in the project to handle .thumbnail
  // No specific import needed here if it's globally applied or via a layout.
  // If direct import is preferred:
  // import { setupImageLoading } from '@scripts/imageLoading.js';
  // document.addEventListener('DOMContentLoaded', setupImageLoading);

  // Based on PodcastCard.astro, the following is used:
  import { setupImageLoading } from '@scripts/imageLoading.js';
  document.addEventListener('DOMContentLoaded', setupImageLoading);
</script>
