---
import PodcastCard from '@components/PodcastCard.astro';
import podcastDetailsJson from '@data/podcastDetails.json';

let allPodcasts = [];
let fetchError = null;

try {
  // Use direct import instead of Astro.glob
  if (podcastDetailsJson && podcastDetailsJson.allPodcasts) {
    allPodcasts = podcastDetailsJson.allPodcasts;
  } else {
    console.warn(
      'No "allPodcasts" key found in the imported podcastDetails.json or data is null/malformed.'
    );
    fetchError = 'Podcast data is not in the expected format.';
    allPodcasts = [];
  }
} catch (error) {
  console.error('Error processing podcastDetails.json:', error);
  fetchError = `Failed to load podcast data. Details: ${error.message}`;
  allPodcasts = []; // Ensure it's an array
}
---

<div class="container mx-auto px-4 pt-16">
  <div class="popular-movies">
    {
      /* Re-use existing class name for styling if appropriate, or use a new one like "popular-podcasts" if styles are specific */
    }
    <h2 class="text-lg font-semibold uppercase tracking-wider text-orange-500">
      Favorite Podcasts
    </h2>
    {
      fetchError && (
        <div class="my-4 rounded border border-red-400 bg-red-100 p-4 text-red-500">
          <p>
            <strong>Error loading podcasts:</strong>
          </p>
          <p>{fetchError}</p>
        </div>
      )
    }
    {
      allPodcasts.length === 0 && !fetchError && (
        <div class="my-4 rounded border border-gray-700 bg-gray-800 p-4 text-gray-400">
          <p>
            No podcasts found. Please run `npm run fetch-data` to populate the list, or add podcasts
            to `src/data/myFavPodcasts.json` and then run the fetch command.
          </p>
        </div>
      )
    }
    <div class="grid grid-cols-1 gap-8 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5">
      {allPodcasts.map((podcast) => <PodcastCard podcast={podcast} />)}
    </div>
  </div>
</div>
