---
import type { GetStaticPaths } from 'astro';
import artistsData from '@data/artistDetails.json';
import ArtistDetailsSkeleton from '@components/ArtistDetailsSkeleton.astro';

export const prerender = true;

const { mbid } = Astro.params;

// Find the artist by mbid from the imported JSON data
const artist = artistsData.allArtists?.find((a) => a.id === mbid);

export const getStaticPaths = (() => {
  const artistEntries = artistsData.allArtists || [];
  return artistEntries.map((artist) => ({
    params: { mbid: artist.id },
  }));
}) satisfies GetStaticPaths;

const artistName = artist?.disambiguation
  ? `${artist.name} (${artist.disambiguation})`
  : artist?.name;
const imageUrl =
  artist?.image_url ||
  `https://via.placeholder.com/500x750.png?text=${encodeURIComponent(artist?.name || 'Unknown Artist')}`;
const displayOrigin = artist?.area?.name || artist?.country || 'Origin Unknown';
let displayGenres = 'Genres not available';
if (artist?.genres && artist.genres.length > 0) {
  displayGenres = artist.genres.map((g) => g.name).join(', ');
} else if (artist?.tags && artist.tags.length > 0) {
  displayGenres = artist.tags.map((t) => t.name).join(', '); // Fallback to tags
}
---

<div>
  <ArtistDetailsSkeleton />
  <div data-content>
    {
      artist ? (
        <div class="artist-info border-b border-gray-800">
          {' '}
          {/* Adapted class name from movie-info */}
          <div class="container mx-auto flex flex-col px-4 py-16 md:flex-row">
            <div class="flex-none">
              <img
                src={imageUrl}
                alt={`${artistName} main image`}
                class="w-64 rounded-lg shadow-lg md:w-96"
                width="500"
                height="750"
              />
            </div>
            <div class="md:ml-24">
              <h2 class="text-4xl font-semibold">{artistName}</h2>
              <div class="mt-2 flex flex-wrap items-center text-sm text-gray-400">
                {artist.rating && artist.rating.value && (
                  <>
                    <svg class="w-4 fill-current text-orange-500" viewBox="0 0 24 24">
                      <g data-name="Layer 2">
                        <path
                          d="M17.56 21a1 1 0 01-.46-.11L12 18.22l-5.1 2.67a1 1 0 01-1.45-1.06l1-5.63-4.12-4a1 1 0 01-.25-1 1 1 0 01.81-.68l5.7-.83 2.51-5.13a1 1 0 011.8 0l2.54 5.12 5.7.83a1 1 0 01.81.68 1 1 0 01-.25 1l-4.12 4 1 5.63a1 1 0 01-.4 1 1 1 0 01-.62.18z"
                          data-name="star"
                        />
                      </g>
                    </svg>
                    <span class="ml-1">{artist.rating.value.toFixed(1)}</span>
                    <span class="mx-2">|</span>
                  </>
                )}
                <span>{displayOrigin}</span>
                <span class="mx-2">|</span>
                <span>{displayGenres}</span>
              </div>

              <div class="mt-8">
                <h4 class="text-lg font-semibold text-gray-300">Biography</h4>
                <p class="mt-2 text-gray-300">
                  {artist['life-span']?.begin && `Born: ${artist['life-span'].begin}`}
                  <br />
                  {artist['life-span']?.end && `Died: ${artist['life-span'].end}`}
                  <br />
                  {artist['begin-area']?.name &&
                    `From: ${artist['begin-area'].name}, ${displayOrigin || 'Unknown Country'}`}
                </p>
              </div>

              <div class="mt-8">
                <h4 class="text-lg font-semibold text-gray-300">Discography Highlights</h4>
                {artist['release-groups']?.length > 0 ? (
                  <ul class="mt-2 list-inside list-disc text-gray-300">
                    {artist['release-groups']
                      .filter((r) => r['primary-type'] === 'Album')
                      .slice(0, 5)
                      .map((r) => (
                        <li>
                          {r.title} ({r['first-release-date']})
                        </li>
                      ))}
                  </ul>
                ) : (
                  <p class="mt-2 text-gray-300">No discography found.</p>
                )}
              </div>
            </div>
          </div>
        </div>
      ) : (
        <div class="container mx-auto px-4 py-16">
          <p class="text-center text-2xl">Artist not found.</p>
          <p class="mt-4 text-center">
            The artist you are looking for with MBID <span class="font-mono">{mbid}</span> could not
            be found in our records. This might be a temporary issue, or the artist may not be in
            our current favorites list.
          </p>
          <div class="mt-8 text-center">
            <a
              href="/artists"
              class="rounded-lg bg-orange-500 px-6 py-3 font-semibold text-white transition duration-300 hover:bg-orange-600"
            >
              Back to Artists List
            </a>
          </div>
        </div>
      )
    }
  </div>
</div>

{/* Placeholder for other sections like a more detailed discography, related artists, etc. */}
{
  /* <div class="artist-cast border-b border-gray-800">
  <div class="container mx-auto px-4 py-16">
    <h2 class="text-4xl font-semibold">Related Artists</h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-8">
      { Placeholders for related artist cards }
    </div>
  </div>
</div> */
}
